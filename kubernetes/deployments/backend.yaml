apiVersion: apps/v1
kind: Deployment
metadata:
  name: charityyeti-backend
  labels:
    app.kubernetes.io/name: charityyeti-backend
    app.kubernetes.io/component: backend
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: charityyeti-backend
      app.kubernetes.io/component: backend
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: charityyeti-backend
        app.kubernetes.io/component: backend
    spec:
      containers:
      - name: charityyeti-backend
        image: williamcook/charityyeti-backend:${TAG_VERSION}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
          - containerPort: 8080
        env:
        - name: CONSUMER_KEY
          valueFrom:
            secretKeyRef:
              name: twitter
              key: CONSUMER_KEY
        - name: CONSUMER_SECRET
          valueFrom:
            secretKeyRef:
              name: twitter
              key: CONSUMER_SECRET
        - name: ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: twitter
              key: ACCESS_TOKEN
        - name: ACCESS_SECRET
          valueFrom:
            secretKeyRef:
              name: twitter
              key: ACCESS_SECRET
        - name: SEND_TWEETS
          value: "false"
        - name: BLOCK_LIST
          value: blockList
        - name: BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: twitter
              key: BEARER_TOKEN
        - name: WEBHOOK_CALLBACK_URL
          value: ${WEBHOOK_CALLBACK_URL}
        - name: ENVIRONMENT_NAME
          value: ${ENVIRONMENT_NAME}
        - name: CHARITY_YETI_ID
          value: ${CHARITY_YETI_ID}
        - name: INVOCATION_PHRASE
          value: ${INVOCATION_PHRASE}
        - name: PUBLIC_URL
          value: ${PUBLIC_URL}
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: mongo
              key: MONGO_URI
        - name: DATABASE
          value: ${MONGO_DATABASE}
        - name: COLLECTION
          value: ${MONGO_COLLECTION}
        - name: PORT
          value: "8080"
        - name: TAG_VERSION
          value: production
